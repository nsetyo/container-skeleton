version: '3'

### Service Network ############################################################
networks:
  public:
    external:
      name: ${PROJECT_EXTERNAL_NETWORK:-caddy}
  backend:
    driver: bridge
  default:
    driver: bridge

services:
### Frontend Service ###########################################################
  frontend:
    build:
      context: ./containers/node
      args:
        - NODEJS_VERSION=${NODEJS_VERSION:-16.13}
        - ENABLE_COREPACK=${ENABLE_COREPACK:-false}
        ### OS Timezone
        - TIMEZONE=${TIMEZONE:-Asia/Jakarta}
    command:
      - npm
      - run
      - dev
    volumes :
      - ${FRONTEND_DIR_HOST:-./frontend}:/app
      - ./cache/frontend/pnpm:/root/.cache/pnpm
      - ./cache/frontend/pnpm-store:/root/.pnpm-store
      - ./code-server/node:/root/.vscode-server
    labels:
      caddy: ${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams 3000}}"
    networks:
      - public
    expose:
      - 3000
    working_dir: /app
### API Service ################################################################
  api-server:
    image   : caddy-server
    build:
      context: ./containers/caddy
    labels:
      caddy: api.${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams}}"
    volumes :
      - ${BACKEND_DIR_HOST:-./backend}/:/var/www
      - ./containers/php-fpm/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./storage/caddy/data:/data
      - ./storage/caddy/config:/config
    networks:
      - backend
      - public
    depends_on:
      - php-fpm
  php-fpm:
    image: ${COMPOSE_PROJECT_NAME}-app
    build:
      context: ./containers/php-fpm
      args:
        - TIMEZONE=${TIMEZONE:-Asia/Jakarta}
        - PHP_VERSION=${PHP_VERSION:-8.0}
        ### Custom Install #####################################################
        - INSTALL_BCMATH=${INSTALL_BCMATH:-false}
        - INSTALL_BZIP=${INSTALL_BZIP:-false}
        - INSTALL_CALENDAR=${INSTALL_CALENDAR:-false}
        - INSTALL_COMPOSER=${INSTALL_COMPOSER:-false}
        - INSTALL_GD=${INSTALL_GD:-false}
        - INSTALL_GHOSTSCRIPT=${INSTALL_GHOSTSCRIPT:-false}
        - INSTALL_GMP=${INSTALL_GMP:-false}
        - INSTALL_ICONV=${INSTALL_ICONV:-false}
        - INSTALL_IMAGE_OPTIMIZERS=${INSTALL_IMAGE_OPTIMIZERS:-false}
        - INSTALL_IMAGEMAGICK=${INSTALL_IMAGEMAGICK:-false}
        - INSTALL_IMAP=${INSTALL_IMAP:-false}
        - INSTALL_INTL=${INSTALL_INTL:-false}
        - INSTALL_LDAP=${INSTALL_LDAP:-false}
        - INSTALL_MEMCACHED=${INSTALL_MEMCACHED:-false}
        - INSTALL_MONGO=${INSTALL_MONGO:-false}
        - INSTALL_MSSQL=${INSTALL_MSSQL:-false}
        - INSTALL_MYSQLI=${INSTALL_MYSQLI:-false}
        - INSTALL_OCI8=${INSTALL_OCI8:-false}
        - INSTALL_OPCACHE=${INSTALL_OPCACHE:-false}
        - INSTALL_PCNTL=${INSTALL_PCNTL:-false}
        - INSTALL_PGSQL=${INSTALL_PGSQL:-false}
        - INSTALL_PHPDBG=${INSTALL_PHPDBG:-false}
        - INSTALL_PHPREDIS=${INSTALL_PHPREDIS:-false}
        - INSTALL_SUPERVISOR=${INSTALL_SUPERVISOR:-false}
        - INSTALL_SYMFONY_CLI=${INSTALL_SYMFONY_CLI:-false}
        - INSTALL_TOKENIZER=${INSTALL_TOKENIZER:-false}
        - INSTALL_XDEBUG=${INSTALL_XDEBUG:-false}
        - INSTALL_ZIP_ARCHIVE=${INSTALL_ZIP_ARCHIVE:-false}
    networks:
      - backend
    environment:
      - PHP_INI_SCAN_DIR=/usr/local/etc/php/extra.d:/usr/local/etc/php/conf.d
    volumes:
      - ${BACKEND_DIR_HOST:-./backend}:/var/www
      - ./code-server/php-fpm/:/root/.vscode-server
    working_dir: /var/www

### Database Service ###########################################################
  database:
    image: postgres:${POSTGRES_VERSION:-14.1}-alpine
    networks:
      - backend
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - ${DB_DATA_PATH:-./storage/database}:/var/lib/postgresql/data:Z
  adminer:
    image: adminer
    labels:
      caddy: db.${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams 8080}}"
    networks:
      - backend
      - public
    environment:
     - ADMINER_DEFAULT_SERVER=database
    depends_on:
      - database

### Search Service #############################################################
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION:-7.15.1}
    user: root
    networks:
      - backend
      - public
    environment:
      - ES_SETTING_BOOTSTRAP_MEMORY__LOCK=true
      - ES_SETTING_CLUSTER_NAME=docker-cluster
      - ES_SETTING_DISCOVERY_TYPE=single-node
      - ES_SETTING_XPACK_SECURITY_ENABLED=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ${ELASTIC_DATA_PATH:-./storage/elasticsearch}:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTICSEARCH_VERSION:-7.15.1}
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${ELASTIC_PASSWORD}
      - TELEMETRY_ENABLED=false
    depends_on:
      - elasticsearch
    networks:
      - backend
      - public
    labels:
      caddy: kibana.${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams 5601}}"
