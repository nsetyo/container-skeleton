version: '3'

### Service Network ############################################################
networks:
  public:
    external:
      name: ${PROJECT_EXTERNAL_NETWORK:-caddy}
  backend:
    driver: bridge
  default:
    driver: bridge

services:
### Frontend Service ###########################################################
  frontend:
    image: ${COMPOSE_PROJECT_NAME}-frontend:${COMPOSE_PROJECT_VERSION:-1.0}
    build:
      context: ./containers/node
      args:
        - NODEJS_VERSION=${NODEJS_VERSION:-16.13}
        - ENABLE_COREPACK=${NODEJS_ENABLE_COREPACK:-false}
        ### OS Timezone
        - TIMEZONE=${NODEJS_TIMEZONE:-Asia/Jakarta}
    working_dir: /var/www/frontend
    expose:
      - 3000
    command:
      - npm
      - run
      - dev
    volumes :
      - ./frontend:/var/www/frontend
      - ./.cache/frontend/pnpm:/root/.cache/pnpm
      - ./.cache/frontend/pnpm-store:/root/.pnpm-store
      - ./.git:/var/www/.git
      - ./.vscode-server/node:/root/.vscode-server
    networks:
      - public
    labels:
      caddy: ${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams 3000}}"

### API Service ################################################################
  api-server:
    image   : ${COMPOSE_PROJECT_NAME}-caddy:${COMPOSE_PROJECT_VERSION:-1.0}
    build:
      context: ./containers/caddy
    labels:
      caddy: api.${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams}}"
    volumes :
      - ./backend:/var/www/backend
      - ./containers/php-fpm/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./storage/caddy/data:/data
      - ./storage/caddy/config:/config
    networks:
      - backend
      - public
    depends_on:
      - php-fpm
  php-fpm:
    image: ${COMPOSE_PROJECT_NAME}-app:${COMPOSE_PROJECT_VERSION:-1.0}
    build:
      context: ./containers/php-fpm
      args:
        - TIMEZONE=${PHP_TIMEZONE:-Asia/Jakarta}
        - PHP_VERSION=${PHP_VERSION:-8.0}
        ### Custom Install #####################################################
        - INSTALL_BASH_COMPLETION=${PHP_INSTALL_BASH_COMPLETION:-false}
        - INSTALL_BCMATH=${PHP_INSTALL_BCMATH:-false}
        - INSTALL_BZIP=${PHP_INSTALL_BZIP:-false}
        - INSTALL_CALENDAR=${PHP_INSTALL_CALENDAR:-false}
        - INSTALL_COMPOSER=${PHP_INSTALL_COMPOSER:-false}
        - INSTALL_GD=${PHP_INSTALL_GD:-false}
        - INSTALL_GHOSTSCRIPT=${PHP_INSTALL_GHOSTSCRIPT:-false}
        - INSTALL_GMP=${PHP_INSTALL_GMP:-false}
        - INSTALL_ICONV=${PHP_INSTALL_ICONV:-false}
        - INSTALL_IMAGE_OPTIMIZERS=${PHP_INSTALL_IMAGE_OPTIMIZERS:-false}
        - INSTALL_IMAGEMAGICK=${PHP_INSTALL_IMAGEMAGICK:-false}
        - INSTALL_IMAP=${PHP_INSTALL_IMAP:-false}
        - INSTALL_INTL=${PHP_INSTALL_INTL:-false}
        - INSTALL_LDAP=${PHP_INSTALL_LDAP:-false}
        - INSTALL_MEMCACHED=${PHP_INSTALL_MEMCACHED:-false}
        - INSTALL_MONGO=${PHP_INSTALL_MONGO:-false}
        - INSTALL_MSSQL=${PHP_INSTALL_MSSQL:-false}
        - INSTALL_MYSQLI=${PHP_INSTALL_MYSQLI:-false}
        - INSTALL_NODEJS_LTS=${PHP_INSTALL_NODEJS_LTS:-false}
        - INSTALL_OCI8=${PHP_INSTALL_OCI8:-false}
        - INSTALL_OPCACHE=${PHP_INSTALL_OPCACHE:-false}
        - INSTALL_PCNTL=${PHP_INSTALL_PCNTL:-false}
        - INSTALL_PGSQL=${PHP_INSTALL_PGSQL:-false}
        - INSTALL_PHPDBG=${PHP_INSTALL_PHPDBG:-false}
        - INSTALL_PHPREDIS=${PHP_INSTALL_PHPREDIS:-false}
        - INSTALL_SUPERVISOR=${PHP_INSTALL_SUPERVISOR:-false}
        - INSTALL_SYMFONY_CLI=${PHP_INSTALL_SYMFONY_CLI:-false}
        - INSTALL_TOKENIZER=${PHP_INSTALL_TOKENIZER:-false}
        - INSTALL_VIM=${PHP_INSTALL_VIM:-false}
        - INSTALL_XDEBUG=${PHP_INSTALL_XDEBUG:-false}
        - INSTALL_ZIP_ARCHIVE=${PHP_INSTALL_ZIP_ARCHIVE:-false}
    working_dir: /var/www/backend
    environment:
      - PHP_INI_SCAN_DIR=/usr/local/etc/php/conf.d:/usr/local/etc/php/local.d
    volumes:
      - ./.cache/php-fpm/composer:/root/.composer/cache
      - ./.git:/var/www/.git
      - ./.vscode-server/php-fpm/:/root/.vscode-server
      - ./backend:/var/www/backend
      - ./containers/php-fpm/conf.d:/usr/local/etc/php/local.d
      - ./workspace/bashrc:/root/.bashrc
      - ./workspace/source.d:/root/source.d
      - ${WORKSPACE_GPG_DIR:-./workspace/gpg}:/root/.gnupg
      - ${WORKSPACE_SSH_DIR:-./workspace/ssh}:/root/.ssh
    networks:
      - backend
    depends_on:
      - elasticsearch
      - database

### Database Service ###########################################################
  database:
    image: postgres:${DB_VERSION:-14.1}-alpine
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - ${DB_DATA_PATH:-./storage/database}:/var/lib/postgresql/data:Z
    networks:
      - backend
  adminer:
    image: adminer
    environment:
     - ADMINER_DEFAULT_SERVER=database
    networks:
      - backend
      - public
    depends_on:
      - database
    labels:
      caddy: db.${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams 8080}}"

### Search Service #############################################################
  elasticsearch:
    image: elasticsearch:${ELASTIC_VERSION:-8.0.0}
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=${COMPOSE_PROJECT_NAME}-cluster
      - discovery.type=single-node
      - xpack.license.self_generated.type=basic
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - ${ELASTIC_DATA_PATH:-./storage/elasticsearch}:/usr/share/elasticsearch/data
    networks:
      - backend
      - public
    deploy:
      resources:
        limits:
          cpus: ${ELASTICSEARCH_CPU_LIMIT:-0.50}
          memory: ${ELASTICSEARCH_MEMORY_LIMIT:-2048M}
    labels:
      caddy: elastic.${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams 9200}}"
  kibana:
    image: kibana:${ELASTIC_VERSION:-8.0.0}
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
      - SERVER_PUBLICBASEURL=https://kibana.${COMPOSE_PROJECT_NAME}.localhost
      - TELEMETRY_ENABLED=false
    networks:
      - backend
      - public
    depends_on:
      - elasticsearch
    deploy:
      resources:
        limits:
          cpus: ${ELASTICSEARCH_CPU_LIMIT:-0.50}
          memory: ${ELASTICSEARCH_MEMORY_LIMIT:-2048M}
    labels:
      caddy: kibana.${COMPOSE_PROJECT_NAME}.localhost
      caddy.reverse_proxy: "{{upstreams 5601}}"
